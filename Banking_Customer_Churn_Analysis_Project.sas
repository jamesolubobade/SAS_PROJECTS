LIBNAME project "C:\Users\Owner\Desktop\DATA SCIENCE LECTURES\DSPS\DS_PROJECT SAS";

/*DATA PROFILING*/
TITLE "";
PROC CONTENTS DATA = project.Bank_Churn_Data;
RUN;

/*VARIABLE IDENTIFICATION*/

*EXITED: Customer that left the bank (Y=1/N=0)
ROWNUMBERS: No of Rows
CUSTOMID: Customid is given (unique)
SURNAME: Surname of the customer
CREDITSCORE: Credit score of customer
GEOGRAPHY: Location of the customer
GENDER: Wether customer is male or female
AGE: Age of the customer
TENURE: How many years has customer been with the bank
BALANCES: Average balance amount of the customer
NOOFPRODUCTS: No. of bank product facilities customer is using
HACRCARD: Customer that has credit card (Y=1/N=0)
ISACTIVEMEMBER: Customers that are active (Y=1/N=0)
ESTIMATEDSALARY: Customers salary;

/*EXPLORATORY DATA ANALYSIS(EDA)*/

/*VARIABLE SELECTION*/

*Y AND Xs Variables----STUDY FRAMEWORK

*Target = Dependent Variable: Y = EXITED/CHURN (Y=1/N=0):

Inputs, Predictors = Independent Variables
Xs Variables

X1= DEMOGRAPHICS e.g. Surname, Credit core, Geography, Gender, Age

X2 = REVENUES e.g. Balances, EstimatedSalary

X3 = PRODUCTS/SERVICES e.g.  NoOfProducts, HasCrCard

X4 = ACTIVITIES/ENGAGEMENT e.g. Tenure, IsActiveMemeber

X5= OTHERS e.g. RowNumber, CustomerID

Y = X1 + X2 + X3 + ......;


/*BROWSING THE DATA PORTION*/
*HEAD;
PROC PRINT DATA = project.Bank_Churn_Data (OBS=10);
RUN;

/*BROWSING THE DATA PORTION*/
*TAIL;
PROC PRINT DATA = project.Bank_Churn_Data (OBS=10000 FIRSTOBS=9990);
RUN;


/*TYPES OF DATA : NUMERIC AND CATEGORICAL*/

/*NUMERIC DATA : FIVE NUMBER SUMMARY - MIN MAX IQR MEDIAN STD OUTLIERS
  VISUAL        : HISTORGRAM, DENSITY CURVE, BOX PLOT*/
*CV = COEFFICEINT OF VARAITION CLM = CONFIDENCE LIMIT CI95;

/*UNIVARIATE ANALYSIS FOR NUMERICAL COLUMNS*/

/*SUMMARIZATION (FIVE-NUMBER SUMMARY)*/
PROC MEANS DATA = project.Bank_Churn_Data;
VAR CreditScore Age Tenure Balance NumOfProducts HasCrCard IsActiveMember EstimatedSalary Exited;
RUN;
PROC MEANS DATA = project.Bank_Churn_Data MAXDEC=2 N NMISS MIN MEDIAN MAX STD CV CLM;
VAR CreditScore Age Tenure Balance NumOfProducts HasCrCard IsActiveMember EstimatedSalary Exited;
RUN;

/*VISUALIZATION*/
PROC UNIVARIATE DATA = project.Bank_Churn_Data;
VAR CreditScore Age Tenure Balance NumOfProducts HasCrCard IsActiveMember EstimatedSalary Exited;

PROC SGPLOT;RUN; *FOR ALL OTHER VISUALS EXCEPT PIE CHART;
PROC GCHART;RUN; * FOR GENERATING PIE CHART;

TITLE "DISTRIBUTION OF NUMERIC VARIABLE : CREDIT SCORE";
PROC SGPLOT DATA = project.Bank_Churn_Data;
 HISTOGRAM CreditScore;
 DENSITY CreditScore;
RUN;
QUIT;
TITLE "DISTRIBUTION OF NUMERIC VARIABLE : CREDIT SCORE";
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBOX CreditScore;
RUN;
QUIT;
TITLE "DISTRIBUTION OF NUMERIC VARIABLE : CREDIT SCORE";
PROC SGPLOT DATA = project.Bank_Churn_Data;
 HBOX CreditScore;
RUN;
QUIT;

TITLE "DISTRIBUTION OF NUMERIC VARIABLE : Age";
PROC SGPLOT DATA = project.Bank_Churn_Data;
 HISTOGRAM Age;
 DENSITY Age;
RUN;
QUIT;

TITLE "DISTRIBUTION OF NUMERIC VARIABLE : Age";
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBOX Age;
RUN;
QUIT;

TITLE "DISTRIBUTION OF NUMERIC VARIABLE : Age";
PROC SGPLOT DATA = project.Bank_Churn_Data;
 HBOX Age;
RUN;
QUIT;

TITLE "DISTRIBUTION OF NUMERIC VARIABLE : TENURE";
PROC SGPLOT DATA = project.Bank_Churn_Data;
 HISTOGRAM Tenure;
 DENSITY Tenure;
RUN;
QUIT;
TITLE "DISTRIBUTION OF NUMERIC VARIABLE : TENURE";
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBOX Tenure;
RUN;
QUIT;
TITLE "DISTRIBUTION OF NUMERIC VARIABLE : TENURE";
PROC SGPLOT DATA = project.Bank_Churn_Data;
 HBOX Tenure;
RUN;
QUIT;
TITLE "DISTRIBUTION OF NUMERIC VARIABLE : BALANCE";
PROC SGPLOT DATA = project.Bank_Churn_Data;
 HISTOGRAM Balance;
 DENSITY Balance;
RUN;
QUIT;
TITLE "DISTRIBUTION OF NUMERIC VARIABLE : BALANCE";
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBOX Balance;
RUN;
QUIT;
PROC SGPLOT DATA = project.Bank_Churn_Data;
 HBOX Balance;
RUN;
QUIT;
TITLE "DISTRIBUTION OF NUMERIC VARIABLE : NUMBER OF PRODUCTS";
PROC SGPLOT DATA = project.Bank_Churn_Data;
 HISTOGRAM NumOfProducts;
 DENSITY NumOfProducts;
RUN;
QUIT;
TITLE "DISTRIBUTION OF NUMERIC VARIABLE : NUMBER OF PRODUCTS";
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBOX NumOfProducts;
RUN;
QUIT;
TITLE "DISTRIBUTION OF NUMERIC VARIABLE : NUMBER OF PRODUCTS";
PROC SGPLOT DATA = project.Bank_Churn_Data;
 HBOX NumOfProducts;
RUN;
QUIT;
TITLE "DISTRIBUTION OF NUMERIC VARIABLE : HAS CREDIT CARD";
PROC SGPLOT DATA = project.Bank_Churn_Data;
 HISTOGRAM HasCrCard;
 DENSITY HasCrCard;
RUN;
QUIT;
TITLE "DISTRIBUTION OF NUMERIC VARIABLE : HAS CREDIT CARD";
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBOX HasCrCard;
RUN;
QUIT;
TITLE "DISTRIBUTION OF NUMERIC VARIABLE : HAS CREDIT CARD";
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBOX HasCrCard;
RUN;
QUIT;
TITLE "DISTRIBUTION OF NUMERIC VARIABLE : IS ACTIVE MEMBER";
PROC SGPLOT DATA = project.Bank_Churn_Data;
 HISTOGRAM IsActiveMember;
 DENSITY IsActiveMember;
RUN;
QUIT;
TITLE "DISTRIBUTION OF NUMERIC VARIABLE : IS ACTIVE MEMBER";
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBOX IsActiveMember;
RUN;
QUIT;
TITLE "DISTRIBUTION OF NUMERIC VARIABLE : IS ACTIVE MEMBER";
PROC SGPLOT DATA = project.Bank_Churn_Data;
 HBOX IsActiveMember;
RUN;
QUIT;
TITLE "DISTRIBUTION OF NUMERIC VARIABLE : ESTIMATED SALARY";
PROC SGPLOT DATA = project.Bank_Churn_Data;
 HISTOGRAM EstimatedSalary;
 DENSITY EstimatedSalary;
RUN;
QUIT;
TITLE "DISTRIBUTION OF NUMERIC VARIABLE : ESTIMATED SALARY";
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBOX EstimatedSalary;
RUN;
QUIT;
TITLE "DISTRIBUTION OF NUMERIC VARIABLE : ESTIMATED SALARY";
PROC SGPLOT DATA = project.Bank_Churn_Data;
 HBOX EstimatedSalary;
RUN;
QUIT;
TITLE "DISTRIBUTION OF NUMERIC VARIABLE : EXITED";
PROC SGPLOT DATA = project.Bank_Churn_Data;
 HISTOGRAM Exited;
 DENSITY Exited;
RUN;
QUIT;
TITLE "DISTRIBUTION OF NUMERIC VARIABLE : EXITED";
PROC SGPLOT DATA = project.Bank_Churn_Data;
 HBOX Exited;
RUN;
QUIT;
TITLE "DISTRIBUTION OF NUMERIC VARIABLE : EXITED";
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBOX Exited;
RUN;
QUIT;



/*CATEGORY: ABSOLUTE FREQ, RELATIVE FREQ AND CUMULATIVE FREQ
  VISUAL        : BAR CHART, PIE CHART, */

TITLE "FREQUENCY TABLE OF GEOGRAPHY";
PROC FREQ DATA = project.Bank_Churn_Data;
 TABLE Geography;
RUN;
TITLE "DISTRIBUTION OF CATEGORICAL VARIABLE : GEOGRAPHY";
PROC SGPLOT DATA =  project.Bank_Churn_Data;
 HBAR Geography;
RUN;
QUIT;
TITLE "DISTRIBUTION OF CATEGORICAL VARIABLE : GEOGRAPHY";
PROC SGPLOT DATA =  project.Bank_Churn_Data;
 VBAR Geography;
RUN;
QUIT;
TITLE "DISTRIBUTION OF CATEGORICAL VARIABLE : GEOGRAPHY";
PROC GCHART DATA =  project.Bank_Churn_Data;
 PIE Geography;
RUN;
QUIT;
TITLE "FREQUENCY TABLE OF GENDER";
PROC FREQ DATA = project.Bank_Churn_Data;
 TABLE Gender;
RUN;
TITLE "DISTRIBUTION OF CATEGORICAL VARIABLE : GENDER";
PROC SGPLOT DATA =  project.Bank_Churn_Data;
 HBAR Gender;
RUN;
QUIT;
TITLE "DISTRIBUTION OF CATEGORICAL VARIABLE : GENDER";
PROC SGPLOT DATA =  project.Bank_Churn_Data;
 VBAR Gender;
RUN;
QUIT;
TITLE "DISTRIBUTION OF CATEGORICAL VARIABLE : GENDER";
PROC GCHART DATA =  project.Bank_Churn_Data;
 PIE Gender;
RUN;
QUIT;

/*CONVERTING NUMERICAL VARIABLES TO CATEGORICAL VARIABLE*/


/*BIVARIATE ANALYSIS*/
* Y ~ X1;
* Y ~ X2;* Y ~ X3;* Y ~ X4;

* Y ~ CONTINUOUS OR CATEOGRY;
* Xs ~ CONTINUOUS OR CATEOGRY;

* Y(CONTINUOUS) ` REGRESSION PROBLEM- E.G ISACTIVEMEMBER, HASCRCARD, NUMOFPRODUCTS, BALANCE, TENURE,;
* X1(CONTINUOS) ` DEMOGRPAHIC (E.G AGE, ESTIMATED SALARY, CREDIT SCORE;

*Y(CONTINUOUS)~ X1(CONTINUOS);
*Y(EXITED) ~ X1(ESTIMATED SALAY)- CORRELATION;





*MISSING VALUES;
*RANDOMNLY MISSING OR NON RANDOMLY MISSING;
*RANDOM MISSING - USUALLY IGNORED;
*QUANITY THE MISSING VALUES;

TITLE " ";
 PROC UNIVARIATE DATA = project.Bank_Churn_Data;
 VAR CreditScore Age Tenure Balance NumOfProducts HasCrCard IsActiveMember EstimatedSalary Exited;
RUN;

*HOW DO YOU QUANTITY MSISING VALUES;
PROC FREQ DATA = project.Bank_Churn_Data;
 TABLE CreditScore Age Tenure Balance NumOfProducts HasCrCard IsActiveMember EstimatedSalary Exited/MISSING;
RUN;
PROC MEANS DATA = project.Bank_Churn_Data min p1 p5 p95 p90 p99 max mean std nmiss n mode;
RUN;
TITLE " ";
PROC FREQ DATA = project.Bank_Churn_Data; 
 TABLE Geography Gender nmiss/MISSING;
RUN;

/*CHECKING FOR MISSING VALUES*/
TITLE "CHECKING FOR MISSING VALUES";
PROC MEANS DATA = project.Bank_Churn_Data NMISS MIN MEAN MAX;
VAR _NUMERIC_;
RUN;

/*NOTE: THERE ARE NO MISSING VALUES IN MY DATA SET*/

*MISSISNG VALUE TREATMENT;
*1. JUST DELETE THEM IF THE MISSING VALUES IS LOW OR AROUND 1 OR 2%
*2. IMPUTATION - EITHER REPLACED WITH MEDIAN OR MEAN FOR MISSING NUMERIC VALUES 
    OR REPLACE WITH MOST COMMON VALUES FOR MISSING CATEGORICAL VARIABLES;
* IF YOU DATA IS NORMALLY DISTRIBUTED YOU REPLACE MISSING VALUES WITH MEAN;
* IF YOUR DATA IS NOT NORMALLY DISTRIBUTED, YOU REPLACE MISSING VALUES WITH MEDIAN;

* IF THEN ELSE IN DATA STEP;
* IN SQL, YOU CAN USE COALSESCE();

*REPONLY =REPLACE ONLY;

PROC STDIZE DATA = project.Bank_Churn_Data METHOD= MEDIAN REPONLY;
 VAR CreditScore Age Tenure Balance NumOfProducts HasCrCard IsActiveMember EstimatedSalary Exited;
RUN;



/* HOW DO YOU DO THEM IN SAS?*/

*NUMERIC/CONTINOUS DATA;
*HOW TO CHANGE FROM CHAR TO NUMBERIC VARAIBLES;
 *INPUT (CHAR) TO NUMERIC;

 *ALL SAS PROCEDURES EXCLUDE MISSING VALUES FROM ANALYSIS BY DEFAULT;

*ML TECHINQIUE - KNN, LINEAR REGRESSION;

* OUTLIERS;
* TYPES OF OUTLIERS- UNIVARIATE AND MULTI VARIATE OUTLIERS;

*UNIVARIATE OUTLIERS;
*KNOWN RANGE E.G AGE, HEART RATE, BLOOD PRESSURE, CHOLESTORL ,INCOME 20000- 1500000
*UNKNOWN RANGE- IQR OR STD
*BOX PLOT TO DETECT OUTLIERS;

/*Outliers are extreme values. They could severely skew the results*/

/*Identifying the Outlier*/

/*It is easy to identify the outlier when you have just a few data points (such as the TEST data set above).

It would be impossible to screen the outlier by eyes when you have tens of thousands of data.

One way to identify the outliers is to find the 99th percentile of data.

Below is an example*/

PROC MEANS DATA = project.Bank_Churn_Data mean p99;
RUN;
TITLE "CHECKING FOR OUTLIERS";
PROC MEANS DATA = project.Bank_Churn_Data min p90 p95 p99 max; 
var _numeric_;
run;

/*FEATURE ENGINEERING*/
/*INCLUSION AND EXCLUSION CRITERIA*/

TITLE "DROPPING IRRELEVANT FEATURES";
proc sql;
   alter table project.Bank_Churn_Data 
      drop RowNumber, CustomerId, Surname;
quit;

/*CHECKING DROPPED VARIABLES*/
*HEAD;
TITLE 'NEW BANK CHURN DATA TABLE';
PROC PRINT DATA = project.Bank_Churn_Data (OBS=10);
RUN;

*DISCRETIZATION OR BINNING;

*1. PROC HPBING;RUN;
*2. PROC FORMAT;RUN;
*3. CONDITIONAL LOGIC IF THEN ELSE STATEMENT;

*HP PROCEDURES - HIGH PERFORMANCE;

TITLE "CHECKING RANGE OF DATA FOR EACH VARIABLE";
PROC MEANS DATA = project.Bank_Churn_Data NMISS MIN MEAN MAX;
 VAR _NUMERIC_ CreditScore Age Tenure Balance NumOfProducts EstimatedSalary;
RUN;
TITLE "HPBIN : CREDIT SCORE";
PROC HPBIN DATA = project.Bank_Churn_Data OUT=CreditScore;
 INPUT CreditScore /NUMBIN=5;  
RUN;
TITLE "BINNING VARIABLE CREDIT SCORE";
PROC FORMAT;
 VALUE CREDITSCOREGRP LOW - 579 = 'PoorScore'
            580 - 669 = 'FairScore'
			670 - 739 = 'GoodScore'
			740 - 799 = 'VeryGoodScore'
			800 - HIGH = 'ExcellentScore'
			;
RUN;
TITLE "CREDIT SCORE GROUP";
PROC FREQ DATA = project.Bank_Churn_Data;
 TABLE CreditScore;
 FORMAT CreditScore CREDITSCOREGRP.;
RUN;
TITLE "HPBIN : AGE";
PROC HPBIN DATA = project.Bank_Churn_Data OUT=Age;
 INPUT Age /NUMBIN=5;  
RUN;
TITLE "BINNING VARIABLE AGE";
PROC FORMAT;
 VALUE AGEGROUP LOW - 25 = 'GenZ'
            26 - 41 = 'Millenials'
			42 - 57 = 'GenX'
			58 - 76 = 'Boomer'
			77- HIGH = 'Post War'
			;
RUN;
TITLE "AGE GROUP";
PROC FREQ DATA = project.Bank_Churn_Data;
 TABLE Age;
 FORMAT Age AGEGROUP.;
RUN;
TITLE "HPBIN : TENURE";
PROC HPBIN DATA = project.Bank_Churn_Data OUT=Tenure;
 INPUT Tenure /NUMBIN=5;  
RUN;
TITLE "BINNING VARIABLE Tenure";
PROC FORMAT;
 VALUE TENUREGROUP LOW - 2 = 'GRP A'
            2 - 4 = 'GRP B'
			4 - 6 = 'GRP C'
			6 - 8 = 'GRP D'
			8- HIGH = 'GRP E'
			;
RUN;
TITLE "TENURE GROUP";
PROC FREQ DATA = project.Bank_Churn_Data;
 TABLE Tenure;
 FORMAT Tenure TENUREGROUP.;
RUN;
TITLE "HPBIN : BALANCE";
PROC HPBIN DATA = project.Bank_Churn_Data OUT=Balance;
 INPUT Balance /NUMBIN=5;  
RUN;
TITLE "BINNING VARIABLE BALANCE";
PROC FORMAT;
 VALUE BALANCEGROUP LOW - 50,000 = 'BAL A'
            50,000 - 100,000 = 'BAL B'
			100,000 - 150,000 = 'BAL C'
			150,000 - 200,000 = 'BAL D'
			200,000- HIGH = 'BAL E'
			;
RUN;
TITLE "BALANCE GROUP";
PROC FREQ DATA = project.Bank_Churn_Data;
 TABLE Balance;
 FORMAT Balance BALANCEGROUP.;
RUN;
TITLE "HPBIN : NUMOFPRODUCTS";
PROC HPBIN DATA = project.Bank_Churn_Data OUT=Balance;
 INPUT NumOfProducts /NUMBIN=5;  
RUN;
TITLE "BINNING VARIABLE NUMOFPRODUCTS";
PROC FORMAT;
 VALUE NUMOFPRODUCTSGROUP LOW - 2 = 'PRODUCT A'
            2 - 4 = 'PRODUCT B'
			;
RUN;
TITLE "NUMOFPRODUCTS GROUP";
PROC FREQ DATA = project.Bank_Churn_Data;
 TABLE NumOfProducts;
 FORMAT NumOfProducts NUMOFPRODUCTSGROUP.;
RUN;
TITLE "HPBIN : ESTIMATEDSALARY";
PROC HPBIN DATA = project.Bank_Churn_Data OUT=EstimatedSalary;
 INPUT EstimatedSalary /NUMBIN=5;  
RUN;
TITLE "BINNING VARIABLE ESTIMATEDSALARY";
PROC FORMAT;
 VALUE ESTSALGRP LOW - 50000 = 'SALARYGRP A'
            50000 - 100000 = 'SALARYGRP B'
			100000 - 150000 = 'SALARYGRP C'
			150000 - HIGH = 'SALARYGRP D'
			;
RUN;
TITLE "ESTIMATEDSALARY GROUP";
PROC FREQ DATA = project.Bank_Churn_Data;
 TABLE EstimatedSalary;
 FORMAT EstimatedSalary ESTSALGRP.;
RUN;
data project.Bank_Churn_Data;
set project.Bank_Churn_Data;
length AGECAT $20;
if Age <=25 then
do;
AGECAT = "GenZ";
end;
else if 26<= Age <= 41 then
do;
AGECAT = "Millenials";
end;
else if 42<= Age <= 57 then
do;
AGECAT = "GenX";
end;
else if 58<= Age <= 76 then
do;
AGECAT = "Boomer";
end;
else
do;
AGECAT= "Post War";
end;
data project.Bank_Churn_Data;
set project.Bank_Churn_Data;
length TENURECAT $20;
if Tenure <=2 then
do;
TENURECAT = "GRP A";
end;
else if 2<= Tenure <= 4 then
do;
TENURECAT = "GRP B";
end;
else if 4<= Tenure <= 6 then
do;
TENURECAT = "GRP C";
end;
else if 6<= Tenure <= 8 then
do;
TENURECAT = "GRP D";
end;
else
do;
TENURECAT= "GRP E";
end;
data project.Bank_Churn_Data;
set project.Bank_Churn_Data;
length CREDITSCORECAT $20;
if CreditScore <=579 then
do;
CREDITSCORECAT = "PoorScore";
end;
else if 580<= CreditScore <= 669 then
do;
CREDITSCORECAT = "FairScore";
end;
else if 670<= CreditScore <= 739 then
do;
CREDITSCORECAT = "GoodScore";
end;
else if 740<= CreditScore <= 799 then
do;
CREDITSCORECAT = "VeryGoodScore";
end;
else
do;
CREDITSCORECAT= "ExcellentScore";
end;
data project.Bank_Churn_Data;
set project.Bank_Churn_Data;
length ESTSALCAT $20;
if EstimatedSalary <=50000 then
do;
ESTSALCAT = "SALARYGRP A";
end;
else if 50001<= EstimatedSalary <= 100000 then
do;
ESTSALCAT = "SALARYGRP B";
end;
else if 100001<= EstimatedSalary <= 150000 then
do;
ESTSALCAT = "SALARYGRP C";
end;
else if 150001<= EstimatedSalary <= 200000 then
do;
ESTSALCAT = "SALARYGRP D";
end;
proc print data = project.Bank_Churn_Data;
run;

*BIVARIATE ANALYSIS;
* Y ~ X1;
* Y ~ X2;* Y ~ X3;* Y ~ X4;

* Y ~ CONTINUOUS OR CATEOGRY;
* Xs ~ CONTINUOUS OR CATEOGRY;

* Y(CONTINUOUS) ` REGRESSION PROBLEM- E.G ISACTIVEMEMBER, NUMOFPRODUCTS, HASCRCARD, BALANCE, AGE , ESTIMATEDSALARY,;
* X1(CONTINUOS) ` DEMOGRPAHIC (E.G AGE, ESTIMATEDSALARY, GEOGRAPHY, CREDITSCORE;

*Y(CONTINUOUS)~ X1(CONTINUOS);
*Y(CREDIT SCORE) ~ X1(INCOME)- CORRELATION;

/*FOR CONTINUOUS VS CONTINUOUS*/
/*FOR SUMMARIZATION*/
TITLE 'SUMMARIZATION OF CONTINUOUS VS CONTINUOUS VARIABLES: EXITED VS CREDIT SCORE'; 
PROC MEAN DATA = project.Bank_Churn_Data;
 TABLE Exited CreditScore;
RUN;
TITLE 'SUMMARIZATION OF CONTINUOUS VS CONTINUOUS VARIABLES: EXITED VS AGE'; 
PROC MEAN DATA = project.Bank_Churn_Data;
 TABLE Exited Age;
RUN;
/*FOR TEST OF INDEPENDENCE*/
TITLE 'TEST OF INDEPENDENCE';
PROC CORR DATA = project.Bank_Churn_Data SPEARMAN PEARSON;
 VAR CreditScore;
 WITH Age;
RUN;
TITLE 'TEST OF INDEPENDENCE: EXITED VS NUMBER OF PRODUCTS';
PROC CORR DATA = project.Bank_Churn_Data SPEARMAN PEARSON;
 VAR NumOfProducts;
 WITH Exited;
RUN;
TITLE 'TEST OF INDEPENDENCE: EXITED VS CREDIT SCORE';
PROC CORR DATA = project.Bank_Churn_Data SPEARMAN PEARSON;
 VAR Exited;
 WITH CreditScore;
RUN;
/*FOR VISUALIZATION: SCATTER PLOT*/
PROC SGPLOT ;RUN;
 
TITLE 'VISUALIZATION OF AGE by CreditScore';
proc sgplot data=project.Bank_Churn_Data;
  scatter x=CreditScore y=Age;
run;
QUIT;
TITLE 'VISUALIZATION OF AGE by CreditScore';
proc sgplot data=project.Bank_Churn_Data;
  scatter x=Age y=CreditScore;
run;
QUIT;
TITLE 'SUMMARIZATION OF CONTINUOUS VS CONTINUOUS VARIABLES: EXITED VS CREDIT SCORE'; 
PROC MEAN DATA = project.Bank_Churn_Data;
 TABLE Exited CreditScore;
RUN;
TITLE 'SUMMARIZATION OF CONTINUOUS VS CONTINUOUS VARIABLES: EXITED VS AGE'; 
PROC MEAN DATA = project.Bank_Churn_Data;
 TABLE Exited Age;
RUN;
/*FOR TEST OF INDEPENDENCE*/
TITLE 'TEST OF INDEPENDENCE';
PROC CORR DATA = project.Bank_Churn_Data SPEARMAN PEARSON;
 VAR CreditScore;
 WITH Age;
RUN;
TITLE 'TEST OF INDEPENDENCE: EXITED VS NUMBER OF PRODUCTS';
PROC CORR DATA = project.Bank_Churn_Data SPEARMAN PEARSON;
 VAR NumOfProducts;
 WITH Exited;
RUN;
TITLE 'TEST OF INDEPENDENCE: EXITED VS CREDIT SCORE';
PROC CORR DATA = project.Bank_Churn_Data SPEARMAN PEARSON;
 VAR Exited;
 WITH CreditScore;
RUN;
/*FOR VISUALIZATION: SCATTER PLOT*/
PROC SGPLOT ;RUN;
 
TITLE 'VISUALIZATION OF AGE by CreditScore';
proc sgplot data=project.Bank_Churn_Data;
  scatter x=CreditScore y=Age;
run;
QUIT;
TITLE 'VISUALIZATION OF AGE by CreditScore';
proc sgplot data=project.Bank_Churn_Data;
  scatter x=Age y=CreditScore;
run;
QUIT;

/*FOR CATEGORICAL VS CATEGORICAL*/
/*FOR SUMMARIZATION*/
TITLE 'CHI-SQUARE TEST FOR CREDITSCOREGRP AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
TABLE CreditScore*Exited;
 FORMAT CreditScore CREDITSCORECAT.;
RUN;
TITLE 'CONTIGENCY TABLE FOR ESTIMATEDSALARYGROUP AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
TABLE Estimatedsalary*Exited;
 FORMAT EstimatedSalary ESTSALCAT.;
RUN;
TITLE 'CONTIGENCY TABLE FOR AGEGROUP AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
TABLE Age*Exited;
 FORMAT Age AGECAT.;
RUN;
TITLE 'CONTIGENCY TABLE FOR TENUREGROUP AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
TABLE Tenure*Exited;
 FORMAT Tenure TENURECAT.;
RUN;
TITLE 'CONTIGENCY TABLE FOR NUMOFPRODUCTSGROUP AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
TABLE NumOfProducts*Exited;
 FORMAT NumOfProducts NUMOFPRODUCTSGROUP.;
RUN;
TITLE 'CONTIGENCY TABLE FOR GEOGRAPHY AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
TABLE Geography*Exited;
RUN;
TITLE 'CONTIGENCY TABLE FOR GENDER AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
TABLE Gender*Exited;
RUN;
TITLE 'CONTIGENCY TABLE FOR NUMBER OF PRODUCTS AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
TABLE NumOfProducts*Exited;
RUN;
TITLE 'CONTIGENCY TABLE FOR HAS CREDIT CARD AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
TABLE HasCrCard*Exited;
RUN;
TITLE 'CONTIGENCY TABLE FOR ACTIVE MEMBERS AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
TABLE IsActiveMember*Exited;
RUN;
/*TEST OF INDEPENDENCE*/
TITLE 'TEST OF INDEPENDENCE';
PROC FREQ DATA = project.Bank_Churn_Data;
 TABLE Gender*Exited/CHISQ NOROW NOCOL;
RUN;
TITLE 'TEST OF INDEPENDENCE FOR GEOGRAPHY VS EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
 TABLE Geography*Exited/CHISQ NOROW NOCOL;
RUN;
TITLE 'CHI-SQUARE TEST FOR AGEGROUP AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
TABLE Age*Exited/CHISQ NOROW NOCOL;
 FORMAT Age AGECAT.;
RUN;
TITLE 'CHI-SQUARE TEST FOR CREDITSCOREGRP AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
TABLE CreditScore*Exited/CHISQ NOROW NOCOL;
 FORMAT CreditScore CREDITSCORECAT.;
RUN;
TITLE 'CHI-SQUARE TEST FOR TENURE GROUP AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
TABLE Tenure*Exited/CHISQ NOROW NOCOL;
 FORMAT Tenure TENURECAT.;
RUN;
TITLE 'CHI-SQUARE TEST FOR ESTIMATED SALARY GROUP AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
TABLE EstimatedSalary*Exited/CHISQ NOROW NOCOL;
 FORMAT EstimatedSalary ESTSALCAT.;
RUN;
/*FOR VISUALIZATION*/
TITLE 'STACKED VERTICAL BAR CHART FOR GENDER AND EXITED';
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBAR Gender/GROUP= Exited;
RUN;
QUIT;
TITLE 'GROUPED BAR CHART FOR GENDER AND EXITED';
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBAR Gender/GROUP= Exited GROUPDISPLAY= CLUSTER;
RUN;
QUIT;
TITLE 'GROUPED BAR CHART FOR GEOGRAPHY AND EXITED';
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBAR Geography/GROUP= Exited GROUPDISPLAY= CLUSTER;
RUN;
QUIT;
TITLE 'GROUPED BAR CHART FOR NUM OF PRODUCTS AND EXITED';
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBAR NumOfProducts/GROUP= Exited GROUPDISPLAY= CLUSTER;
RUN;
QUIT;
TITLE 'STACKED BAR CHART FOR HAS CREDIT CARD AND EXITED';
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBAR HasCrCard/GROUP= Exited;
RUN;
QUIT;
TITLE 'STACKED BAR CHART FOR ACTIVE MEMBERS AND EXITED';
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBAR IsActiveMember/GROUP= Exited;
RUN;
QUIT;
TITLE 'GROUPED BAR CHART FOR AGEGROUP AND EXITED';
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBAR Exited/GROUP= Age GROUPDISPLAY= CLUSTER;
 FORMAT Age AGECAT.;
RUN;
QUIT;
TITLE 'GROUPED BAR CHART FOR CREDITSCOREGROUP AND EXITED';
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBAR Exited/GROUP= CreditScore GROUPDISPLAY= CLUSTER;
 FORMAT CreditScore CREDITSCORECAT.;
RUN;
QUIT;
TITLE 'GROUPED BAR CHART FOR ESTIMATED SALARY GROUP AND EXITED';
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBAR Exited/GROUP= EstimatedSalary GROUPDISPLAY= CLUSTER;
 FORMAT EstimatedSalary ESTSALCAT.;
RUN;
QUIT;
TITLE 'GROUPED BAR CHART FOR TENURE GROUP AND EXITED';
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBAR Exited/GROUP= Tenure GROUPDISPLAY= CLUSTER;
 FORMAT Tenure TENURECAT.;
RUN;
QUIT;
/*FOR CATEGORICAL VS CATEGORICAL*/
/*FOR SUMMARIZATION*/
TITLE 'CHI-SQUARE TEST FOR CREDITSCOREGRP AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
TABLE CreditScore*Exited;
 FORMAT CreditScore CREDITSCOREGRP.;
RUN;
TITLE 'CONTIGENCY TABLE FOR ESTIMATEDSALARYGROUP AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
TABLE Estimatedsalary*Exited;
 FORMAT EstimatedSalary ESTSALGRP.;
RUN;
TITLE 'CONTIGENCY TABLE FOR AGEGROUP AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
TABLE Age*Exited;
 FORMAT Age AGEGROUP.;
RUN;
TITLE 'CONTIGENCY TABLE FOR TENUREGROUP AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
TABLE Tenure*Exited;
 FORMAT Tenure TENUREGROUP.;
RUN;
TITLE 'CONTIGENCY TABLE FOR NUMOFPRODUCTSGROUP AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
TABLE NumOfProducts*Exited;
 FORMAT NumOfProducts NUMOFPRODUCTSGROUP.;
RUN;
TITLE 'CONTIGENCY TABLE FOR GEOGRAPHY AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
TABLE Geography*Exited;
RUN;
TITLE 'CONTIGENCY TABLE FOR GENDER AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
TABLE Gender*Exited;
RUN;
TITLE 'CONTIGENCY TABLE FOR NUMBER OF PRODUCTS AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
TABLE NumOfProducts*Exited;
RUN;
TITLE 'CONTIGENCY TABLE FOR HAS CREDIT CARD AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
TABLE HasCrCard*Exited;
RUN;
TITLE 'CONTIGENCY TABLE FOR ACTIVE MEMBERS AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
TABLE IsActiveMember*Exited;
RUN;
/*TEST OF INDEPENDENCE*/
TITLE 'TEST OF INDEPENDENCE';
PROC FREQ DATA = project.Bank_Churn_Data;
 TABLE Gender*Exited/CHISQ NOROW NOCOL;
RUN;
TITLE 'TEST OF INDEPENDENCE FOR GEOGRAPHY VS EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
 TABLE Geography*Exited/CHISQ NOROW NOCOL;
RUN;
TITLE 'CHI-SQUARE TEST FOR AGEGROUP AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
TABLE Age*Exited/CHISQ NOROW NOCOL;
 FORMAT Age AGEGROUP.;
RUN;
TITLE 'CHI-SQUARE TEST FOR CREDITSCOREGRP AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
TABLE CreditScore*Exited/CHISQ NOROW NOCOL;
 FORMAT CreditScore CREDITSCOREGRP.;
RUN;
TITLE 'CHI-SQUARE TEST FOR TENURE GROUP AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
TABLE Tenure*Exited/CHISQ NOROW NOCOL;
 FORMAT Tenure TENUREGROUP.;
RUN;
TITLE 'CHI-SQUARE TEST FOR ESTIMATED SALARY GROUP AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
TABLE EstimatedSalary*Exited/CHISQ NOROW NOCOL;
 FORMAT EstimatedSalary ESTSALGRP.;
RUN;

/*FOR VISUALIZATION*/
TITLE 'STACKED VERTICAL BAR CHART FOR GENDER AND EXITED';
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBAR Gender/GROUP= Exited;
RUN;
QUIT;
TITLE 'GROUPED BAR CHART FOR GENDER AND EXITED';
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBAR Gender/GROUP= Exited GROUPDISPLAY= CLUSTER;
RUN;
QUIT;
TITLE 'GROUPED BAR CHART FOR GEOGRAPHY AND EXITED';
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBAR Geography/GROUP= Exited GROUPDISPLAY= CLUSTER;
RUN;
QUIT;
TITLE 'GROUPED BAR CHART FOR NUM OF PRODUCTS AND EXITED';
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBAR NumOfProducts/GROUP= Exited GROUPDISPLAY= CLUSTER;
RUN;
QUIT;
TITLE 'STACKED BAR CHART FOR HAS CREDIT CARD AND EXITED';
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBAR HasCrCard/GROUP= Exited;
RUN;
QUIT;
TITLE 'STACKED BAR CHART FOR ACTIVE MEMBERS AND EXITED';
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBAR IsActiveMember/GROUP= Exited;
RUN;
QUIT;
TITLE 'GROUPED BAR CHART FOR AGEGROUP AND EXITED';
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBAR Exited/GROUP= Age GROUPDISPLAY= CLUSTER;
 FORMAT Age AGEGROUP.;
RUN;
QUIT;
TITLE 'GROUPED BAR CHART FOR CREDITSCOREGROUP AND EXITED';
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBAR Exited/GROUP= CreditScore GROUPDISPLAY= CLUSTER;
 FORMAT CreditScore CREDITSCOREGRP.;
RUN;
QUIT;
TITLE 'GROUPED BAR CHART FOR ESTIMATED SALARY GROUP AND EXITED';
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBAR Exited/GROUP= EstimatedSalary GROUPDISPLAY= CLUSTER;
 FORMAT EstimatedSalary ESTSALGRP.;
RUN;
QUIT;
TITLE 'GROUPED BAR CHART FOR TENURE GROUP AND EXITED';
PROC SGPLOT DATA = project.Bank_Churn_Data;
 VBAR Exited/GROUP= Tenure GROUPDISPLAY= CLUSTER;
 FORMAT Tenure TENUREGRP.;
RUN;
QUIT;

/*FOR CONTINUOUS VS CATEGORICAL*/
/*FOR SUMMARIZATION*/
TITLE 'GROUPED BAR CHART FOR TENURE GROUP AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
 TABLE Exited*Tenure;
 FORMAT Tenure TENURECAT.;
RUN;
QUIT;
TITLE 'TABLE OF CREDIT SCORE GROUP BY EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
 TABLE Exited*CreditScore;
 FORMAT CreditScore CREDITSCORECAT.;
RUN;
QUIT;
TITLE 'TABLE OF AGE GROUP BY EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
 TABLE Exited*Age;
 FORMAT Age AGECAT.;
RUN;
QUIT;
TITLE 'TABLE OF ESTIMATED SALARY GROUP BY EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
 TABLE Exited*EstimatedSalary;
 FORMAT EstimatedSalary ESTSALCAT.;
RUN;
QUIT;
/*FOR VISUALIZATION*/
TITLE 'CONTINUOUS VS CATEGORICAL: EXITED BY ESTIMATED SALARY';
PROC SGPLOT DATA = project.Bank_Churn_Data;
VBOX Exited/GROUP= EstimatedSalary GROUPDISPLAY= CLUSTER;
FORMAT EstimatedSalary ESTCAT.;
RUN;
QUIT;
/*FOR TEST OF INDEPENDENCE*/
TITLE 'TEST OF INDEPENDENCE FOR EXITED AND CREDIT SCORE';
PROC TTEST DATA = project.Bank_Churn_Data;
 VAR CreditScore;
 CLASS Exited;
RUN;
QUIT;
TITLE 'TEST OF INDEPENDENCE FOR EXITED AND CREDIT SCORE';
PROC TTEST DATA = project.Bank_Churn_Data;
VAR CreditScore;
 CLASS Exited;
RUN;
QUIT;
PROC ANOVA DATA = project.Bank_Churn_Data;
 CLASS CreditScore;
 MODEL Exited=CreditScore;
RUN;
QUIT;
PROC ANOVA DATA = project.Bank_Churn_Data;
 CLASS Geography;
 MODEL Exited=Geography;
RUN;
QUIT;
PROC ANOVA DATA = project.Bank_Churn_Data;
 CLASS Gender;
 MODEL Exited=Gender;
RUN;
QUIT;
/*FOR CONTINUOUS VS CATEGORICAL*/
/*FOR SUMMARIZATION*/
TITLE 'GROUPED BAR CHART FOR TENURE GROUP AND EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
 TABLE Exited*Tenure;
 FORMAT Tenure TENUREGROUP.;
RUN;
QUIT;
TITLE 'TABLE OF CREDIT SCORE GROUP BY EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
 TABLE Exited*CreditScore;
 FORMAT CreditScore CREDITSCOREGRP.;
RUN;
QUIT;
TITLE 'TABLE OF AGE GROUP BY EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
 TABLE Exited*Age;
 FORMAT Age AGEGROUP.;
RUN;
QUIT;
TITLE 'TABLE OF ESTIMATED SALARY GROUP BY EXITED';
PROC FREQ DATA = project.Bank_Churn_Data;
 TABLE Exited*EstimatedSalary;
 FORMAT EstimatedSalary ESTSALGRP.;
RUN;
QUIT;
/*FOR VISUALIZATION*/
TITLE 'CONTINUOUS VS CATEGORICAL: EXITED BY ESTIMATED SALARY';
PROC SGPLOT DATA = project.Bank_Churn_Data;
VBOX Exited/GROUP= EstimatedSalary GROUPDISPLAY= CLUSTER;
FORMAT EstimatedSalary ESTSALGRP.;
RUN;
QUIT;
/*FOR TEST OF INDEPENDENCE*/
TITLE 'TEST OF INDEPENDENCE FOR EXITED AND CREDIT SCORE';
PROC TTEST DATA = project.Bank_Churn_Data;
 VAR CreditScore;
 CLASS Exited;
RUN;
QUIT;
TITLE 'TEST OF INDEPENDENCE FOR EXITED AND CREDIT SCORE';
PROC TTEST DATA = project.Bank_Churn_Data;
VAR CreditScore;
 CLASS Exited;
RUN;
QUIT;
PROC ANOVA DATA = project.Bank_Churn_Data;
 CLASS CreditScore;
 MODEL Exited=CreditScore;
RUN;
QUIT;
PROC ANOVA DATA = project.Bank_Churn_Data;
 CLASS Geography;
 MODEL Exited=Geography;
RUN;
QUIT;
PROC ANOVA DATA = project.Bank_Churn_Data;
 CLASS Gender;
 MODEL Exited=Gender;
RUN;
QUIT;

TITLE "RUNNING A LOGISTICS REGRESSION MODEL WITH INTERACTIONS";
PROC LOGISTIC DATA = project.Bank_Churn_Data plots(only) =(roc oddsratio);
	CLASS CREDITSCORECAT (PARAM=REF REF='GoodScore')
          Geography (PARAM=REF REF='Germany')
		  Gender (PARAM=REF REF ="Female")
		  AGECAT(PARAM =REF REF ="Boomer")
		  TENURECAT(PARAM =REF REF ="GRP A")
		  ESTSALCAT(PARAM =REF REF ="SALARYGRP C")  ;
	MODEL Exited (EVENT="1") = CREDITSCORECAT Geography Gender AGECAT TENURECAT ESTSALCAT/ CLODDS =PL;
	ODDSRATIO CREDITSCORECAT;
	ODDSRATIO Geography;
    ODDSRATIO Gender;
	ODDSRATIO AGECAT;
	ODDSRATIO TENURECAT;
	ODDSRATIO ESTSALCAT;
RUN;QUIT;



